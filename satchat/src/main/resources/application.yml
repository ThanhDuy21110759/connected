# Application properties
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH:/}

spring:
  # languages
  messages:
    basename: i18n/messages
    encoding: UTF-8

  # Main configuration
  main:
    allow-bean-definition-overriding: true

  # Handler for not found endpoints
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

  # Database configuration
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/satchat}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html

  #  liquibase configuration
  liquibase:
    change-log: classpath:db/changelog/liquibase-master.xml

  # Multipart configuration
  servlet:
    multipart:
      max-file-size: 150MB
      max-request-size: 150MB
      enabled: true

  # Jackson configuration
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: UTC

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${BASE_URL}/login/oauth2/code/google

  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

bezkoder:
  app:
    jwtSecret:
    jwtExpirationMs: 86400000
    jwtRefreshExpirationMs: 86400000

# Redis configuration
redis:
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:6379}
  password: ${REDIS_PASSWORD}

# Minio configuration
minio:
  endpoint: ${MINIO_ENDPOINT:http://127.0.0.1:9000}
  port: ${MINIO_PORT:9000}
  accessKey: ${MINIO_ACCESS_KEY}
  secretKey: ${MINIO_SECRET_KEY}
  secure: ${MINIO_SECURE:false}
  bucket-name: ${MINIO_BUCKET_NAME:commons}
  image-size: ${MINIO_IMAGE_SIZE:10485760}
  file-size: ${MINIO_FILE_SIZE:1073741824}
  accessURL: ${MINIO_ACCESS_URL:http://localhost:8280/minio/download/commons/}

# Logging
logging:
  level:
    com:
      application: DEBUG
    org:
      springframework:
        security: DEBUG
        web:
          socket: DEBUG
  file:
    name: logs/app.log
    path: ${LOG_PATH:./logs}

# Frontend configuration
frontend:
  url: ${FRONTEND_URL:http://localhost:3000}

# giaohangnhanh configuration
ghn:
  url: ${GHN_URL:https://dev-online-gateway.ghn.vn/shiip/public-api/v2}
  token: ${GHN_TOKEN}
  shopId: ${GHN_SHOPID}

# spring AI
springai:
  posts: ${SPRINGAI_URL_POSTS:http://localhost:8180/api/rec-posts}
  products: ${SPRINGAI_URL_PRODUCTS:http://localhost:8180/api/rec-products}

# semantic search
semantic:
  url: ${SEMANTIC_SEARCH_URL:http://localhost:8000/search?query={query}&top_k={top_k}}
